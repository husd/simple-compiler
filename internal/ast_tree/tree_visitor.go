package ast_tree

/**
 * 树的节点有很多类型，对应于语法解析的规则
 * @author hushengdong
 */
type AstTreeVisitor interface {
	visitAnnotatedType()
	visitAnnotation()
	visitMethodInvocation()
	visitAssert()
	visitAssignment()
	visitCompoundAssignment()
	visitBinary()
	visitBlock()
	visitBreak()
	visitCase()
	visitCatch()
	visitClass()
	visitConditionalExpression()
	visitContinue()
	visitDoWhileLoop()
	visitErroneous()
	visitExpressionStatement()
	visitEnhancedForLoop()
	visitForLoop()
	visitIdentifier()
	visitIf()
	visitImport()
	visitArrayAccess()
	visitLabeledStatement()
	visitLiteral()
	visitMethod()
	visitModifiers()
	visitNewArray()
	visitNewClass()
	visitLambdaExpression()
	visitParenthesized()
	visitReturn()
	visitMemberSelect()
	visitMemberReference()
	visitEmptyStatement()
	visitSwitch()
	visitSynchronized()
	visitThrow()
	visitCompilationUnit()
	visitTry()
	visitParameterizedType()
	visitUnionType()
	visitIntersectionType()
	visitArrayType()
	visitTypeCast()
	visitPrimitiveType()
	visitTypeParameter()
	visitInstanceOf()
	visitUnary()
	visitVariable()
	visitWhileLoop()
	visitWildcard()
	visitOther()
}
